---
title: "Movies Actors"
format: 
  revealjs:
    theme: sky
editor: visual
---

```{r, include=FALSE}
library(igraph)
library(tidyverse)
movies_actors_graph <- read.graph("graphml/movies_actors_graph.graphml", format = "graphml")
movies_actors_undirected_df <- read_csv("exel/movies_actors_df.csv")
movies_actors_undirected_graph <- graph.data.frame(movies_actors_undirected_df, directed = FALSE)

dg_in <- degree(movies_actors_graph, mode = "in")
bw1 <- betweenness(movies_actors_graph, directed = FALSE) 
cl <- closeness(movies_actors_undirected_graph)
ec1 <- eigen_centrality(movies_actors_graph)
pg1 <- page_rank(movies_actors_graph, directed = FALSE)
ecc <- eccentricity(movies_actors_undirected_graph)
l <- cluster_louvain(movies_actors_undirected_graph)
fg <- cluster_fast_greedy(movies_actors_undirected_graph)
```

# **Wstęp**

[![IMDB Top 250 Movies](Pictures/IMDB%20250%20Movies.png){fig-align="center" width="1003"}](https://www.imdb.com/chart/top/)

## **Podstawowe parametry grafu**

-   Liczba wierzchołków: `r vcount(movies_actors_graph)`

-   Liczba krawędzi: `r ecount(movies_actors_graph)`

-   Spójność: Brak

-   Średnia ilość filmów dla aktora: `r round(mean(dg_in[dg_in > 0]), digits = 3)`

-   Gęstość grafu: `r format(edge_density(movies_actors_graph), digits = 3)`

-   Średnica grafu: `r diameter(movies_actors_graph, directed = FALSE, unconnected = !is.connected(movies_actors_graph))`

-   Średnia długość ścieżki w grafie: `r average.path.length(movies_actors_graph, directed = FALSE, unconnected = !is.connected(movies_actors_graph))`

## **Rozkład stopni wierzchołków**

![](Pictures/plot_1.png){fig-align="center"}

## **Poszczególne parametry wierzchołków**

-   Maksymalne pośrednictwo dla: `r V(movies_actors_graph)$name[which(bw1 == max(bw1))]`

-   Maksymalna bliskość dla: `r V(movies_actors_graph)$name[which(cl == max(cl))]`

-   Maksymalna centralność wektora własnego dla: `r V(movies_actors_undirected_graph)$name[which(ec1$vector == max(ec1$vector))]`

-   Maksymalny Page Rank dla: np. `r V(movies_actors_graph)$name[which(pg1$vector == max(pg1$vector))][1]`

-   Maksymalna ekscentryczność dla: np. `r V(movies_actors_undirected_graph)$name[which(ecc == max(ecc))][1]`

## **Klastrowanie**

|                     | Wielopoziomowy              | Szybki zachłanny             |
|---------------------|-----------------------------|------------------------------|
| Modułowość          | `r round(modularity(l), 6)` | `r round(modularity(fg), 6)` |
| Liczba społeczności | `r length(l)`               | `r length(fg)`               |

NMI: `r round(compare(l, fg, method = "nmi"), 6)`
